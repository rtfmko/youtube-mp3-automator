# === Bat auto-update check ===
$batPath = "$PSScriptRoot\youtube-mp3.bat"
$versionFile = "$PSScriptRoot\version.txt"
$updateScriptUrl = "https://raw.githubusercontent.com/rtfmko/youtube-mp3-automator/refs/heads/main/update-bat.ps1"
$tmpUpdateScript = "$PSScriptRoot\update-bat.ps1"

# –ï—Å–ª–∏ version.txt –Ω–µ—Ç ‚Äî —Å—Ç–∞—Ä—ã–π –±–∞—Ç–Ω–∏–∫
if (-not (Test-Path $versionFile)) {
    Write-Host "‚ö† Old bat detected, downloading updater..." -ForegroundColor Yellow

    try {
        Invoke-WebRequest $updateScriptUrl -OutFile $tmpUpdateScript -UseBasicParsing -ErrorAction Stop
    } catch {
        Write-Host "‚ö† Failed to download updater, please update manually." -ForegroundColor Red
        exit
    }

    Write-Host "üîÑ Starting bat updater and exiting current session..." -ForegroundColor Green

    # –ó–∞–ø—É—Å–∫–∞–µ–º update-bat.ps1 –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π ps1
    Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -File `"$tmpUpdateScript`"" -WindowStyle Hidden

    exit
}

# =======================
# Configuration
# =======================
$installDir = Join-Path $env:LOCALAPPDATA "yt-dlp"
$downloadsDir = Join-Path (New-Object -ComObject Shell.Application).NameSpace('shell:Downloads').Self.Path "YouTubeMusic"
$cookiesPath = $null       # Store path to cookies if specified
$maxParallel = 5           # Max parallel count for multi (-m) mode
$optionsFile = Join-Path $installDir "options.txt"

# =======================
# Localization
# =======================
$loc = @{
    "en" = @{
        "commandsHeader" = "`nüí° Commands:"
        "commands" = @(
            "  üì• Enter YouTube links or IDs separated by space, comma, or semicolon",
            "  üç™ -c <path>  ‚Üí Set cookies file",
            "  ‚ö° -s         ‚Üí Single download mode (one by one)",
            "  ‚ö° -m [N]     ‚Üí Multi download mode (parallel downloads), optional N = 2-12, default 5",
			"  üìÇ -o         ‚Üí Open downloads folder"
            "  üßπ clear      ‚Üí Clear console",
            "  ‚ùå q, e       ‚Üí Exit script"
        )
        "promptInput" = "`nüé• Links, IDs, or command"
        "clearing" = "üßπ Clearing..."
        "fileNotFound" = "‚ö† File not found: "
        "modeMultiSet" = "‚ö° Mode set to multi download, parallel: "
        "modeSingleSet" = "‚ö° Mode set to single download"
        "downloadingStartMulti" = "üì• Downloading start... ({0} tracks, mode: {1}, parallel: {2})"
        "downloadingStartSingle" = "üì• Downloading start... ({0} tracks, mode: {1})"
        "downloadingItem" = "üì• Downloading: {0}"
        "done" = "‚úÖ Done! Files are in: "
        "selectedModeSingle" = "‚ö° Selected mode: {0}"
        "selectedModeMulti" = "‚ö° Selected mode: {0}, parallel: {1}"
        "failedSaveOptions" = "‚ö† Failed to save options file"
        "failedLoadOptions" = "‚ö† Failed to read options file, using defaults"
        "downloadFFmpeg" = "‚¨á Downloading ffmpeg..."
        "downloadYtDlp" = "‚¨á Downloading yt-dlp..."
        "alarmRange" = "‚ö† Value must be in range 2 - 12, set to "
        "exiting" = "üëã Exit..."
        "note" = " üíæ Selected download mode and parallel count are saved and automatically applied on next run."
		"cookiesSet" = "üç™ Cookies set:"
		"openFolder" = "üìÇ Opening downloads folder:"
		"folderNotFound" = "‚ö† Folder not found:"
		"cookieUsed" = "üç™ Using cookie: {0}"
		"cookieNotUsed" = "üç™ No cookie used for this session"
    }
    "uk" = @{
        "commandsHeader" = "`nüí° –ö–æ–º–∞–Ω–¥–∏:"
        "commands" = @(
            "  üì• –í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è YouTube –∞–±–æ ID, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º, –∫–æ–º–æ—é –∞–±–æ –∫—Ä–∞–ø–∫–æ—é –∑ –∫–æ–º–æ—é",
            "  üç™ -c <—à–ª—è—Ö>  ‚Üí –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ñ–∞–π–ª cookie",
            "  ‚ö° -s         ‚Üí –†–µ–∂–∏–º –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è",
            "  ‚ö° -m [N]     ‚Üí –†–µ–∂–∏–º –º–Ω–æ–∂–∏–Ω–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è (–ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è), –Ω–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ N = 2-12, –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 5",
			"  üìÇ -o         ‚Üí –í—ñ–¥–∫—Ä–∏—Ç–∏ –ø–∞–ø–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å"
            "  üßπ clear      ‚Üí –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ–Ω—Å–æ–ª—å",
            "  ‚ùå q, e       ‚Üí –í–∏—Ö—ñ–¥ —ñ–∑ —Å–∫—Ä–∏–ø—Ç—É"
        )
        "promptInput" = "`nüé• –ü–æ—Å–∏–ª–∞–Ω–Ω—è, ID –∞–±–æ –∫–æ–º–∞–Ω–¥–∞"
        "clearing" = "üßπ –û—á–∏—â–µ–Ω–Ω—è..."
        "fileNotFound" = "‚ö† –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: "
        "modeMultiSet" = "‚ö° –†–µ–∂–∏–º –º–Ω–æ–∂–∏–Ω–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, –ø–∞—Ä–∞–ª–µ–ª—å: "
        "modeSingleSet" = "‚ö° –†–µ–∂–∏–º –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è"
        "downloadingStartMulti" = "üì• –ü–æ—á–∞—Ç–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è... ({0} —Ç—Ä–µ–∫—ñ–≤, —Ä–µ–∂–∏–º: {1}, –ø–∞—Ä–∞–ª–µ–ª—å: {2})"
        "downloadingStartSingle" = "üì• –ü–æ—á–∞—Ç–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è... ({0} —Ç—Ä–µ–∫—ñ–≤, —Ä–µ–∂–∏–º: {1})"
        "downloadingItem" = "üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: {0}"
        "done" = "‚úÖ –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤: "
        "selectedModeSingle" = "‚ö° –í–∏–±—Ä–∞–Ω–∏–π —Ä–µ–∂–∏–º: {0}"
        "selectedModeMulti" = "‚ö° –í–∏–±—Ä–∞–Ω–∏–π —Ä–µ–∂–∏–º: {0}, –ø–∞—Ä–∞–ª–µ–ª—å: {1}"
        "failedSaveOptions" = "‚ö† –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ —Ñ–∞–π–ª –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å"
        "failedLoadOptions" = "‚ö† –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ —Ñ–∞–π–ª –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º"
        "downloadFFmpeg" = "‚¨á –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ffmpeg..."
        "downloadYtDlp" = "‚¨á –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è yt-dlp..."
        "alarmRange" = "‚ö† –ó–Ω–∞—á–µ–Ω–Ω—è –º–∞—î –±—É—Ç–∏ –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ 2 - 12, –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ "
        "exiting" = "üëã –í–∏—Ö—ñ–¥..."
        "note" = " üíæ –í–∏–±—Ä–∞–Ω–∏–π —Ä–µ–∂–∏–º —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ç–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É—é—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –∑–∞–ø—É—Å–∫—É."
		"cookiesSet" = "üç™ –§–∞–π–ª cookie –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:"
		"openFolder" = "üìÇ –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø–∞–ø–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å:"
		"folderNotFound" = "‚ö† –ü–∞–ø–∫—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ:"
		"cookieUsed" = "üç™ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è cookie: {0}"
		"cookieNotUsed" = "üç™ Cookie –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —É —Ü—ñ–π —Å–µ—Å—ñ—ó"
    }
    "ru" = @{
        "commandsHeader" = "`nüí° –ö–æ–º–∞–Ω–¥—ã:"
        "commands" = @(
            "  üì• –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ YouTube –∏–ª–∏ ID —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Ç–æ—á–∫—É —Å –∑–∞–ø—è—Ç–æ–π",
            "  üç™ -c <–ø—É—Ç—å>  ‚Üí –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª cookie",
            "  ‚ö° -s         ‚Üí –†–µ–∂–∏–º –æ–¥–∏–Ω–æ—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏",
            "  ‚ö° -m [N]     ‚Üí –†–µ–∂–∏–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ (–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏), –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ N = 2-12, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5",
			"  üìÇ -o         ‚Üí –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É –∑–∞–≥—Ä—É–∑–æ–∫"
            "  üßπ clear      ‚Üí –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å",
            "  ‚ùå q, e       ‚Üí –í—ã—Ö–æ–¥ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞"
        )
        "promptInput" = "`nüé• –°—Å—ã–ª–∫–∏, ID –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞"
        "clearing" = "üßπ –û—á–∏—Å—Ç–∫–∞..."
        "fileNotFound" = "‚ö† –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: "
        "modeMultiSet" = "‚ö° –†–µ–∂–∏–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏, –ø–∞—Ä–∞–ª–ª–µ–ª—å: "
        "modeSingleSet" = "‚ö° –†–µ–∂–∏–º –æ–¥–∏–Ω–æ—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏"
        "downloadingStartMulti" = "üì• –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏... ({0} —Ç—Ä–µ–∫–æ–≤, —Ä–µ–∂–∏–º: {1}, –ø–∞—Ä–∞–ª–ª–µ–ª—å: {2})"
        "downloadingStartSingle" = "üì• –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏... ({0} —Ç—Ä–µ–∫–æ–≤, —Ä–µ–∂–∏–º: {1})"
        "downloadingItem" = "üì• –ó–∞–≥—Ä—É–∑–∫–∞: {0}"
        "done" = "‚úÖ –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: "
        "selectedModeSingle" = "‚ö° –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: {0}"
        "selectedModeMulti" = "‚ö° –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: {0}, –ø–∞—Ä–∞–ª–ª–µ–ª—å: {1}"
        "failedSaveOptions" = "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫"
        "failedLoadOptions" = "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
        "downloadFFmpeg" = "‚¨á –ó–∞–≥—Ä—É–∑–∫–∞ ffmpeg..."
        "downloadYtDlp" = "‚¨á –ó–∞–≥—Ä—É–∑–∫–∞ yt-dlp..."
        "alarmRange" = "‚ö† –ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 2 - 12, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ "
        "exiting" = "üëã –í—ã—Ö–æ–¥..."
        "note" = " üíæ –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ."
		"cookiesSet" = "üç™ –§–∞–π–ª cookie —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:"
		"openFolder" = "üìÇ –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–∞–ø–∫–∏ –∑–∞–≥—Ä—É–∑–æ–∫:"
		"folderNotFound" = "‚ö† –ü–∞–ø–∫—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:"
		"cookieUsed" = "üç™ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è cookie: {0}"
		"cookieNotUsed" = "üç™ Cookie –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏"
    }
}

# =======================
# Detect UI language
# =======================
$uiLang = (Get-UICulture).TwoLetterISOLanguageName
$lang = if ($loc.ContainsKey($uiLang)) { $uiLang } else { "en" }

# =======================
# Helper Functions
# =======================

# Ensure folder exists
function Ensure-Folder { param([string]$Path); if (-not (Test-Path $Path)) { New-Item -ItemType Directory -Path $Path | Out-Null } }

# Install yt-dlp if missing
function Install-YtDlp { param([string]$InstallDir)
    $ytDlpPath = Join-Path $InstallDir "yt-dlp.exe"
    if (-not (Test-Path $ytDlpPath)) { Write-Host $loc[$lang].downloadYtDlp; Invoke-WebRequest "https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe" -OutFile $ytDlpPath }
}

# Install ffmpeg if missing
function Install-FFmpeg { param([string]$InstallDir)
    $ffmpegPath = Join-Path $InstallDir "ffmpeg.exe"
    if (-not (Test-Path $ffmpegPath)) {
        Write-Host $loc[$lang].downloadFFmpeg
        $ffmpegZip = Join-Path $InstallDir "ffmpeg.zip"
        Invoke-WebRequest "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip" -OutFile $ffmpegZip
        $tempDir = Join-Path $InstallDir "ffmpeg_temp"
        Expand-Archive $ffmpegZip -DestinationPath $tempDir -Force
        $ffmpegExe = Get-ChildItem "$tempDir" -Recurse -Filter "ffmpeg.exe" | Select-Object -First 1
        Copy-Item $ffmpegExe.FullName $ffmpegPath -Force
        Remove-Item $ffmpegZip -Force
        Remove-Item $tempDir -Recurse -Force
    }
}

# Load options safely
function Load-Options { param([string]$FilePath)
    $options = @{ downloadMode = "single"; maxParallel = 5 }
    if (-not (Test-Path $FilePath)) { return $options }
    try {
        Get-Content $FilePath | ForEach-Object {
            $_ = $_.Trim()
            if ($_ -match '^(\w+)\s*=\s*(.+)$') { $options[$Matches[1]] = $Matches[2] }
        }
    } catch { Write-Host $loc[$lang].failedLoadOptions }
    return $options
}

# Save options safely
function Save-Options { param([string]$FilePath, [hashtable]$Options)
    try {
        if (Test-Path $FilePath) { $attribs = (Get-Item $FilePath).Attributes; if ($attribs -band [System.IO.FileAttributes]::ReadOnly) { (Get-Item $FilePath).Attributes = $attribs -bxor [System.IO.FileAttributes]::ReadOnly } }
        $Options.GetEnumerator() | ForEach-Object { "$($_.Key)=$($_.Value)" } | Set-Content -Path $FilePath -Force
        (Get-Item $FilePath).Attributes = (Get-Item $FilePath).Attributes -bor [System.IO.FileAttributes]::ReadOnly
    } catch { Write-Host $loc[$lang].failedSaveOptions }
}

# Show selected mode
function Show-SelectedMode { param([string]$Mode,[int]$Parallel)
    if ($Mode -eq "single") { Write-Host ($loc[$lang].selectedModeSingle -f $Mode) -ForegroundColor Cyan }
    else { Write-Host ($loc[$lang].selectedModeMulti -f $Mode, $Parallel) -ForegroundColor Green }
}

# =======================
# Initialize
# =======================
Ensure-Folder $installDir
Ensure-Folder $downloadsDir
Install-YtDlp $installDir
Install-FFmpeg $installDir

# Load options
$options = Load-Options -FilePath $optionsFile
$downloadMode = $options.downloadMode
$maxParallel = [int]$options.maxParallel

# Show header
function Show-Header {
	Write-Host "`nüéµ YouTube ‚Üí MP3 (320 kbps) Downloader" -ForegroundColor Magenta
	Show-SelectedMode -Mode $downloadMode -Parallel $maxParallel
	
	# Mini-info: cookie usage
	if ($cookiesPath -ne $null) {
		Write-Host ($loc[$lang].cookieUsed -f $cookiesPath) -ForegroundColor Yellow
	} else {
		Write-Host ($loc[$lang].cookieNotUsed) -ForegroundColor DarkGray
	}

	# Commands list
	Write-Host $loc[$lang].commandsHeader -ForegroundColor White
	$loc[$lang].commands | ForEach-Object { Write-Host $_ -ForegroundColor White } 

	# Note
	Write-Host "`n"$loc[$lang].note -ForegroundColor Gray
}

Show-Header

# =======================
# Main Loop
# =======================
while ($true) {
    $inputLine = Read-Host $loc[$lang].promptInput

    if ([string]::IsNullOrWhiteSpace($inputLine) -or $inputLine -match '^(q|quit|e|exit)$') { Write-Host $loc[$lang].exiting; break }
	
	# Open downloads folder
	if ($inputLine -match '^-o$') {
		if (Test-Path $downloadsDir) {
			Write-Host $loc[$lang].openFolder$downloadsDir -ForegroundColor Green
			Start-Process $downloadsDir
		} else {
			Write-Host $loc[$lang].folderNotFound$downloadsDir -ForegroundColor Red
		}
		continue
}

    # Clear console
    if ($inputLine -match '^(clear|clean)$') { 
		Clear-Host; 
		Write-Host $loc[$lang].clearing; 
		Start-Sleep -Milliseconds 300
		Clear-Host; 
		Show-Header
		continue 
	}

    # Set cookies
    if ($inputLine -match '^-c\s+(.+)$') {
        $newPath = $Matches[1].Trim('"')
        if (Test-Path $newPath) { $cookiesPath = $newPath;  Write-Host $loc[$lang].cookiesSet$cookiesPath }
        else { Write-Host $loc[$lang].fileNotFound$newPath }
        continue
    }

    # Set download mode
    if ($inputLine -match '^-s$') { $downloadMode = "single"; $options.downloadMode = $downloadMode; Save-Options -FilePath $optionsFile -Options $options; Show-SelectedMode -Mode $downloadMode -Parallel $maxParallel; continue }
    if ($inputLine -match '^-m\s*(\d*)$') {
        $num = $Matches[1]
        if (-not $num) { $num = $maxParallel }
        $num = [int]$num
        if ($num -lt 2) { $num = 2; Write-Host $loc[$lang].alarmRange + $num -ForegroundColor Red }
        if ($num -gt 12) { $num = 12; Write-Host $loc[$lang].alarmRange + $num -ForegroundColor Red }
        $downloadMode = "multi"; $maxParallel = $num; $options.downloadMode = $downloadMode; $options.maxParallel = $maxParallel
        Save-Options -FilePath $optionsFile -Options $options
        Show-SelectedMode -Mode $downloadMode -Parallel $maxParallel
        continue
    }

    # Split URLs
    $urls = $inputLine -split '[ ,;]+' | Where-Object { -not [string]::IsNullOrWhiteSpace($_) }
    $total = $urls.Count
    $completed = 0

    if ($downloadMode -eq "multi") { Write-Host ($loc[$lang].downloadingStartMulti -f $total, $downloadMode, $maxParallel) -ForegroundColor Cyan }
    else { Write-Host ($loc[$lang].downloadingStartSingle -f $total, $downloadMode) -ForegroundColor Cyan }

    # Downloading
    if ($downloadMode -eq "single") {
        foreach ($u in $urls) {
            $url = if ($u -match '^[A-Za-z0-9_-]{11}$') { "https://www.youtube.com/watch?v=$u" } else { $u }
            Write-Host ($loc[$lang].downloadingItem -f $url)
            $cmdArgs = @("-x","--audio-format","mp3","--audio-quality","320K","-o","$downloadsDir\%(title)s.%(ext)s",$url)
            if ($cookiesPath) { $cmdArgs = @("--cookies",$cookiesPath) + $cmdArgs }
            & "$installDir\yt-dlp.exe" @cmdArgs
        }
    } else {
        $jobs = @()
        foreach ($u in $urls) {
            while (($jobs | Where-Object { $_.State -eq 'Running' }).Count -ge $maxParallel) { Start-Sleep -Milliseconds 100 }
            $jobs += Start-Job -ScriptBlock {
                param($u,$InstallDir,$DownloadsDir,$CookiesPath)
                $url = if ($u -match '^[A-Za-z0-9_-]{11}$') { "https://www.youtube.com/watch?v=$u" } else { $u }
                Write-Host ("üì• Downloading: {0}" -f $url)
                $cmdArgs = @("-x","--audio-format","mp3","--audio-quality","320K","-o","$DownloadsDir\%(title)s.%(ext)s",$url)
                if ($CookiesPath) { $cmdArgs = @("--cookies",$CookiesPath) + $cmdArgs }
                & "$InstallDir\yt-dlp.exe" @cmdArgs
            } -ArgumentList $u,$installDir,$downloadsDir,$cookiesPath
        }
        while (($jobs | Where-Object { $_.State -eq 'Running' }).Count -gt 0) { Start-Sleep -Milliseconds 300 }
        Receive-Job -Job $jobs | Out-Null
        Remove-Job -Job $jobs
    }

    Write-Host ($loc[$lang].done + $downloadsDir)
}
